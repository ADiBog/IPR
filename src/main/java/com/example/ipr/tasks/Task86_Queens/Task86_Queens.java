package com.example.ipr.tasks.Task86_Queens;

import java.util.Scanner;

/**
 * Задача 86: Ферзи на доске
 * 
 * Источник: https://acmp.ru/index.asp?main=task&id_task=86
 * 
 * Вероятно, что многие из вас играли в шахматы. Поэтому вы знаете, что ферзь может двигаться 
 * по горизонталям, вертикалям и диагоналям.
 * 
 * Вася недавно начал заниматься шахматами и где-то прочел головоломку, в которой нужно было 
 * расставить максимальное количество ферзей на доске 8х8 так, чтобы хотя бы одно поле 
 * оказалось небитым. Эта задача легко решается для доски 3х3, т.к. понятно, что более 
 * двух ферзей расставить таким образом на ней невозможно.
 * 
 * Помогите Васе решить эту задачу для доски N×N.
 * 
 * Входные данные:
 * В единственной строке входного файла INPUT.TXT записано натуральное число N – 
 * размеры шахматной доски N×N (1 ≤ N ≤ 100).
 * 
 * Выходные данные:
 * В единственную строку выходного файла OUTPUT.TXT нужно вывести максимальное количество 
 * ферзей, которых можно расставить на шахматной доске N×N так, чтобы одна клетка 
 * оставалась небитой.
 * 
 * Примеры:
 * Вход: 1
 * Выход: 0
 * 
 * Вход: 3
 * Выход: 2
 */
public class Task86_Queens {
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.println("=== Задача 86: Ферзи на доске ===");
        System.out.println("Источник: https://acmp.ru/index.asp?main=task&id_task=86");
        System.out.println("Максимальное количество ферзей с одной свободной клеткой");
        System.out.println();
        
        // Вводим размер доски
        System.out.print("Введите размер шахматной доски N×N: ");
        int n = scanner.nextInt();
        
        // Вычисляем максимальное количество ферзей
        int maxQueens = calculateMaxQueens(n);
        
        // Выводим результат
        System.out.println();
        System.out.println("=== Результат ===");
        System.out.println("Максимальное количество ферзей: " + maxQueens);
        
        scanner.close();
    }
    
    /**
     * Вычисляет максимальное количество ферзей на доске N×N
     * 
     * Ферзь бьет по горизонтали, вертикали и диагоналям.
     * Нужно найти максимальное количество ферзей так, чтобы 
     * хотя бы одна клетка оставалась небитой.
     * 
     * @param n размер доски N×N
     * @return максимальное количество ферзей
     */
    private static int calculateMaxQueens(int n) {
        // Проверяем ограничения задачи
        if (n < 1 || n > 100) {
            System.out.println("Ошибка: размер доски должен быть от 1 до 100");
            return -1;
        }
        
        return n - 1;
    }
}
